# Docker build instructions for the Nublado controller.
#
# This Dockerfile has four stages:
#
# base-image
#   Updates the base Python image with security patches and common system
#   packages. This image becomes the base of all other images.
# install-image
#   Installs third-party dependencies (controller/requirements/main.txt)
#   into a virtual environment and then installs the app. This virtual
#   environment is the only thing copied into the runtime image.  copying
#   across build stages.
# runtime-image
#   - Copies the virtual environment into place.
#   - Runs a non-root user.
#   - Sets up the entrypoint and port.

FROM python:3.13.7-slim-bookworm AS base-image

# Update system packages
COPY controller/scripts/install-base-packages.sh .
RUN ./install-base-packages.sh && rm ./install-base-packages.sh

FROM base-image AS install-image

# Install uv.
COPY --from=ghcr.io/astral-sh/uv:0.7.15 /uv /bin/uv

# Install system packages only needed for building dependencies.
COPY controller/scripts/install-dependency-packages.sh .
RUN ./install-dependency-packages.sh

# Disable hard links during uv package installation since we're using a
# cache on a separate file system.
ENV UV_LINK_MODE=copy

# Install the dependencies.
WORKDIR /app
RUN --mount=type=cache,target=/root/.cache/uv \
    --mount=type=bind,source=controller/uv.lock,target=uv.lock \
    --mount=type=bind,source=controller/pyproject.toml,target=pyproject.toml \
    uv sync --frozen --no-default-groups --compile-bytecode --no-install-project

# Install the application itself.
ADD . /app
WORKDIR /app/controller
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --locked --no-editable --compile-bytecode

FROM base-image AS runtime-image

# Create a non-root user.
RUN useradd --create-home appuser

# Copy the virtualenv.
COPY --from=install-image /app/.venv /app/.venv

# Switch to the non-root user.
USER appuser

# Expose the port.
EXPOSE 8080

# Make sure we use the virtualenv.
WORKDIR /app
ENV PATH="/app/.venv/bin:$PATH"

# Run the application.
CMD ["uvicorn", "--factory", "controller.main:create_app", "--host", "0.0.0.0", "--port", "8080"]
