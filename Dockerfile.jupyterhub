# Docker build instructions for the custom Nublado JupyterHub build.
#
# This Dockerfile only has a single stage because rather than using the
# virtualenv trick for dependencies like our other Docker builds, it
# installs the additional Python modules directly into the local paths
# used by system Python. This is done since changing the execution
# environment of JupyterHub from the base container seems fragile and
# likely to break.
#
# The drawback is that the image is much larger than it would need to be,
# since it contains build-time dependencies that would only normally be
# necessary while installing extra Python modules.

# This is just an alias to avoid repeating the base image.
FROM quay.io/jupyterhub/k8s-hub:4.2.0

# The upstream chart already switched users, but we have additional
# operations that must be done as root.
USER 0

# Install uv.
COPY --from=ghcr.io/astral-sh/uv:0.8.22 /uv /bin/uv

# Update and install packages.
COPY hub/scripts/install-packages.sh .
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt,sharing=locked \
    ./install-packages.sh && rm install-packages.sh

# Disable hard links during uv package installation since we're using a
# cache on a separate file system.
ENV UV_LINK_MODE=copy

# Install the dependencies.
ADD . /app
WORKDIR /app/hub
RUN uv export --frozen --no-default-groups --no-emit-project --no-editable \
    -o requirements.txt
RUN --mount=type=cache,target=/root/.cache/uv \
    uv pip install --system --compile-bytecode -r requirements.txt
WORKDIR /
RUN rm -r /app

# Copy the modified page template
COPY hub/templates/page.html /usr/local/etc/jupyterhub/templates/page.html

# Upstream uses jovyan at 1000:1000 to run Jupyterhub. This must be kept
# in sync with the Phalanx nublado application values.yaml.
WORKDIR /srv/jupyterhub
USER jovyan
EXPOSE 8000
EXPOSE 8081
