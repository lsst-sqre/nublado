# Docker build instructions for the custom Nublado JupyterHub build.
#
# This Dockerfile has three stages:
#
# base-image
#   Updates the base Python image with security patches and common system
#   packages. This image becomes the base of all other images.
# dependencies-image
#   Installs third-party dependencies (spawner/requirements/main.txt) into
#   a virtual environment. This virtual environment is ideal for copying
#   across build stages.
# runtime-image
#   - Copies the virtual environment into place.
#   - Installs the additional JupyterHub plugins.
#   - Runs a non-root user.

FROM jupyterhub/jupyterhub:4.0.2 as base-image

# Update system packages
COPY spawner/scripts/install-base-packages.sh .
RUN ./install-base-packages.sh && rm install-base-packages.sh

FROM base-image as dependencies-image

# Install system packages only needed for building dependencies.
COPY spawner/scripts/install-dependency-packages.sh .
RUN ./install-dependency-packages.sh && rm install-dependency-packages.sh

# Install the dependencies of the extra JupyterHub modules.
COPY spawner/requirements/main.txt ./requirements.txt
RUN pip install --quiet --no-cache-dir -r requirements.txt

FROM dependencies-image as runtime-image

# Install the extra JupyterHub modules.
COPY . /app
WORKDIR /app
RUN pip install --no-cache-dir spawner

# Create a non-root user to run JupyterHub. Upstream uses 768 as the UID
# and GID. This value must be kept in sync with the Phalanx nublado
# application values.yaml.
RUN groupadd --gid 768 jovyan
RUN useradd --create-home jovyan --uid 768 --gid 768
WORKDIR /home/jovyan

USER jovyan
EXPOSE 8000
EXPOSE 8081
