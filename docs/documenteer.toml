[project]
title = "Nublado"
copyright = "2022-2023 Association of Universities for Research in Astronomy, Inc. (AURA)"

[project.openapi]
openapi_path = "_static/openapi.json"
doc_path = "client/rest-api"

[project.openapi.generator]
function = "controller.main:create_openapi"

[project.python]
package = "controller"

[sphinx]
disable_primary_sidebars = [
    "**/index",
    "changelog",
]
extensions = [
    "sphinx_diagrams",
    "sphinxcontrib.autodoc_pydantic",
]
nitpicky = true
nitpick_ignore = [
    # Ignore missing cross-references for modules that don't provide
    # intersphinx. The documentation itself should use double-quotes instead
    # of single-quotes to not generate a reference, but automatic references
    # are generated from the type signatures and can't be avoided. These are
    # intentionally listed specifically because I've caught documentation bugs
    # by having Sphinx complain about a new symbol.
    ["py:class", "dataclasses_avroschema.pydantic.main.AvroBaseModel"],
    ["py:class", "dataclasses_avroschema.main.AvroModel"],
    ["py:class", "fastapi.applications.FastAPI"],
    ["py:class", "fastapi.datastructures.DefaultPlaceholder"],
    ["py:class", "fastapi.exceptions.HTTPException"],
    ["py:class", "fastapi.params.Depends"],
    ["py:class", "fastapi.routing.APIRoute"],
    ["py:class", "httpx.AsyncClient"],
    ["py:class", "httpx.HTTPError"],
    ["py:class", "kubernetes_asyncio.client.api_client.ApiClient"],
    ["py:class", "kubernetes_asyncio.client.exceptions.ApiException"],
    ["py:class", "pydantic.main.BaseModel"],
    ["py:class", "pydantic_core._pydantic_core.ValidationError"],
    ["py:class", "pydantic_settings.main.BaseSettings"],
    ["py:class", "pydantic_settings.sources.CliSettingsSource"],
    ["py:class", "pydantic_settings.sources.providers.cli.CliSettingsSource"],
    ["py:class", "sse_starlette.ServerSentEvent"],
    ["py:class", "starlette.requests.Request"],
    ["py:class", "starlette.responses.Response"],
    ["py:class", "starlette.routing.Route"],
    ["py:class", "starlette.routing.BaseRoute"],
    ["py:exc", "fastapi.HTTPException"],
    ["py:exc", "fastapi.exceptions.RequestValidationError"],
    ["py:exc", "httpx.HTTPError"],
    ["py:obj", "fastapi.routing.APIRoute"],
    ["py:obj", "httpx.AsyncClient"],
    ["py:obj", "ComputedFieldInfo"],
    ["py:exc", "starlette.exceptions.HTTPException"],
    # traitlets does provide intersphinx, but the documentation generates some
    # reference to this undocumented type.
    ["py:class", "traitlets.traitlets.HasDescriptors"],
    # See https://github.com/sphinx-doc/sphinx/issues/13178
    ["py:class", "pathlib._local.Path"],
    # Bug in Sphinx with type declarations
    ["py:class", "safir.pydantic._types.TypeAliasType"],
]
nitpick_ignore_regex = [
    ["py:class", "kubernetes_asyncio\\.client\\.models\\..*"],
    # Bug in autodoc_pydantic.
    ["py:obj", ".*\\.all fields"],
]
rst_epilog_file = "_rst_epilog.rst"
python_api_dir = "dev/api/contents"

[sphinx.intersphinx.projects]
jupyerhub = "https://jupyterhub.readthedocs.io/en/stable"
python = "https://docs.python.org/3.13"  # Union gets weird in 3.14
rubin-repertoire = "https://repertoire.lsst.io"
safir = "https://safir.lsst.io"
semver = "https://python-semver.readthedocs.io/en/stable"
structlog = "https://www.structlog.org/en/stable"
tornado = "https://www.tornadoweb.org/en/stable"
traitlets = "https://traitlets.readthedocs.io/en/stable"

[sphinx.linkcheck]
ignore = [
    # Generate redirects for authentication
    '^https://github\.com/settings/developers$',
    '^https://github\.com/.*/issues/new$',
    # Sphinx is now trying to resolve URLs in examples because it doesn't
    # understand Annotated
    "^http://nublado-ribbon.nb-ribbon:8888",
]
