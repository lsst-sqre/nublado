name: CI

env:
  # Current supported uv version. The uv documentation recommends pinning
  # this. The version should match the version used in .pre-commit-config.yaml
  # and frozen in uv.lock. It is updated by make update-deps.
  UV_VERSION: "0.9.5"

"on":
  merge_group: {}
  pull_request: {}
  push:
    branches-ignore:
      # These should always correspond to pull requests, so ignore them for
      # the push trigger and let them be triggered by the pull_request
      # trigger, avoiding running the workflow twice. This is a minor
      # optimization so there's no need to ensure this is comprehensive.
      - "dependabot/**"
      - "gh-readonly-queue/**"
      - "renovate/**"
      - "t/**"
      - "tickets/**"
      - "u/**"
  release:
    types: [published]
  workflow_dispatch: {}

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          version: ${{ env.UV_VERSION }}

      - name: Run nox
        run: uv run --only-group=nox nox -s lint typing test

  # The test job tests everything with the latest Python version. The Nublado
  # client and the JupyterHub support code may additionally support older
  # Python versions and thus must be independently tested for those versions
  # using a matrix. Do not include the latest Python version in this matrix;
  # that will be tested above.
  test-client:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      matrix:
        python:
          - "3.12"
          - "3.14"

    steps:
      - uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          python-version: ${{ matrix.python }}
          version: ${{ env.UV_VERSION }}

      - name: Run nox
        run: uv run --only-group=nox nox -s typing test
        working-directory: client

  test-hub:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      matrix:
        python:
          - "3.12"
          - "3.14"

    steps:
      - uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          python-version: ${{ matrix.python }}
          version: ${{ env.UV_VERSION }}

      - name: Run nox
        run: uv run --only-group=nox nox -s typing test
        working-directory: hub

  changes:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    permissions:
      pull-requests: read
    outputs:
      docs: ${{ steps.filter.outputs.docs }}
      docs-specific: ${{ steps.filter.outputs.docs-specific }}
      jupyterlab-base: ${{ steps.filter.outputs.jupyterlab-base }}

    steps:
      - uses: actions/checkout@v5

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            docs:
              - "CHANGELOG.md"
              - "docs/**"
              - "client/src/rubin/nublado/**"
              - "controller/src/controller/**"
              - "hub/plugins/authenticator/src/rubin/nublado/**"
              - "hub/plugins/spawner/src/rubin/nublado/**"
            docs-specific:
              - "CHANGELOG.md"
              - "docs/**"
            jupyterlab-base:
              - "Dockerfile.jupyterlab-base"
              - "jupyterlab-base/**"

  docs:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    needs: changes
    if: >-
      (needs.changes.outputs.docs == 'true')
      || (github.event_name == 'workflow_dispatch')
      || (github.event_name == 'release' && github.event.action == 'published')

    steps:
      - uses: actions/checkout@v5
        with:
          # Ensure the documentation gets the right version.
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          version: ${{ env.UV_VERSION }}

      - name: Install extra packages
        run: |
          sudo apt-get update
          sudo apt-get install -y graphviz

      - name: Run nox
        run: uv run --only-group=nox nox -s docs

      # Upload docs:
      # - on any push to main
      # - on pushes to tickets/ branches if docs/ directory content changed
      - name: Upload to LSST the Docs
        uses: lsst-sqre/ltd-upload@v1
        with:
          project: nublado
          dir: "docs/_build/html"
          username: ${{ secrets.LTD_USERNAME }}
          password: ${{ secrets.LTD_PASSWORD }}
        if: >
          (github.event_name == 'push' && github.ref_name == 'main')
          || (github.event_name == 'workflow_dispatch')
          || (github.event_name == 'pull_request'
              && (startsWith(github.head_ref, 'tickets/')
                  || startsWith(github.head_ref, 't/'))
              && needs.changes.outputs.docs-specific == 'true')

  linkcheck:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    needs: changes
    if: >-
      (needs.changes.outputs.docs-specific == 'true')
      || (github.event_name == 'workflow_dispatch')
      || (github.event_name == 'release' && github.event.action == 'published')

    steps:
      - uses: actions/checkout@v5
        with:
          # Ensure the documentation gets the right version.
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          version: ${{ env.UV_VERSION }}

      - name: Update package lists
        run: |
          sudo apt-get update
          sudo apt-get install -y graphviz

      - name: Run nox
        run: uv run --only-group=nox nox -s docs-linkcheck

  build:
    needs: [test, test-hub]
    uses: lsst-sqre/multiplatform-build-and-push/.github/workflows/build.yaml@v2
    secrets: inherit

    # Only do Docker builds of tagged releases and pull requests from ticket
    # branches. This will still trigger on pull requests from untrusted
    # repositories whose branch names match our tickets/* branch convention,
    # but in this case the build will fail with an error since the secret
    # won't be set.
    if: >
      (github.event_name == 'release' && github.event.action == 'published')
      || (github.event_name == 'workflow_dispatch')
      || (github.event_name != 'merge_group'
          && (startsWith(github.head_ref, 'tickets/')
              || startsWith(github.head_ref, 't/')))

    strategy:
      matrix:
        container:
          - name: "controller"
            gar: false
          - name: "fsadmin"
            gar: false
          - name: "inithome"
            gar: true
          - name: "jupyterhub"
            gar: false
          - name: "purger"
            gar: true
          - name: "repo-cloner"
            gar: true

    # For each image name, construct an image named lsst-sqre/nublado-<name>
    # and push it to GitHub Container Registry. If gar is true, also push the
    # image to us-central1-docker.pkg.dev/rubin-shared-services-71ec/sciplat.
    # In that repository, the images are named with only <name>, without the
    # leading "nublado-". This is the private Google Artifact Registry used by
    # the US Rubin Science Platform.
    with:
      cache: false
      dockerfile: Dockerfile.${{ matrix.container.name }}
      images: ghcr.io/lsst-sqre/nublado-${{ matrix.container.name }}${{ matrix.container.gar && ',us-central1-docker.pkg.dev/rubin-shared-services-71ec/sciplat/' || '' }}${{ matrix.container.gar && matrix.container.name || '' }}

  build-jupyterlab:
    needs: changes
    uses: lsst-sqre/multiplatform-build-and-push/.github/workflows/build.yaml@v2
    secrets: inherit

    # Only do Docker builds of tagged releases and pull requests from ticket
    # branches. This will still trigger on pull requests from untrusted
    # repositories whose branch names match our tickets/* branch convention,
    # but in this case the build will fail with an error since the secret
    # won't be set.
    if: >
      (needs.changes.outputs.jupyterlab-base == 'true'
       && github.event_name != 'merge_group'
       && (startsWith(github.head_ref, 'tickets/')
           || startsWith(github.head_ref, 't/')))
      || (github.event_name == 'workflow_dispatch')
      || (github.event_name == 'release' && github.event_name == 'published')

    with:
      additional-tags: ${{ github.event_name == 'release' && 'latest' || '' }}
      cache: false
      dockerfile: Dockerfile.jupyterlab-base
      images: "ghcr.io/lsst-sqre/nublado-jupyterlab-base"

  test-packaging:
    name: Test packaging
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs: [test, test-client, docs]

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0 # full history for setuptools_scm

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          version: ${{ env.UV_VERSION }}

      - name: Build the package
        run: uv build --no-sources
        working-directory: client

  pypi:
    name: Upload release to PyPI
    runs-on: ubuntu-latest

    timeout-minutes: 10
    needs: [test, test-client, docs, test-packaging]
    environment:
      name: pypi
      url: https://pypi.org/p/rubin-nublado-client
    permissions:
      id-token: write
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0 # full history for setuptools_scm

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          version: ${{ env.UV_VERSION }}

      - name: Build the package
        run: uv build --no-sources
        working-directory: client

      - name: Publish the package
        run: uv publish
        working-directory: client
